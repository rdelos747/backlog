{"version":3,"sources":["backlog-games.js","App.js","reportWebVitals.js","index.js"],"names":["Platforms","name","platform","started","replay","GlobalStyle","createGlobalStyle","Page","styled","div","Content","Header","h1","HeaderMobile","Links","Link","a","TopText","p","ListItem","PlayGamesSection","GameName","GamePlatform","GameReplay","GameStarted","App","useState","playGames","setPlayGames","useEffect","idxs","i","idx","Math","floor","random","allGames","length","indexOf","push","map","href","game","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.661dee7b.chunk.js","sourcesContent":["export const Platforms = {\r\n  DreamCast: 'Dream Cast',\r\n  DS: 'DS',\r\n  GBA: 'GBA',\r\n  GCN: 'GCN',\r\n  Genesis: 'Genesis',\r\n  NES: 'NES',\r\n  PC: 'PC',\r\n  PS1: 'PS1',\r\n  PS2: 'PS2',\r\n  PS4: 'PS4',\r\n  PS5: 'PS5',\r\n  Saturn: 'Saturn',\r\n  SNES: 'SNES/SFC',\r\n  Switch: 'Switch'\r\n};\r\n\r\nexport default [\r\n  {\r\n    name: 'Shin Megami Tensei',\r\n    platform: Platforms.SNES,\r\n    started: true,\r\n    replay: false\r\n  },\r\n  {\r\n    name: 'Shin Megami Tensei II',\r\n    platform: Platforms.SNES,\r\n    started: false,\r\n    replay: false\r\n  },\r\n  {\r\n    name: 'Panzer Dragoon',\r\n    platform: Platforms.Saturn,\r\n    started: false,\r\n    replay: false\r\n  },\r\n  {\r\n    name: 'Advance Wars',\r\n    platform: Platforms.GBA,\r\n    started: false,\r\n    replay: false\r\n  },\r\n  {\r\n    name: 'Daemon X Machina',\r\n    platform: Platforms.Switch,\r\n    started: false,\r\n    replay: false\r\n  },\r\n  { name: 'Black', platform: Platforms.PS2, started: false, replay: false },\r\n  {\r\n    name: 'Half Life Alyx',\r\n    platform: Platforms.PC,\r\n    started: false,\r\n    replay: false\r\n  },\r\n  {\r\n    name: 'Symphony of the Night',\r\n    platform: Platforms.PS1,\r\n    started: false,\r\n    replay: false\r\n  },\r\n  {\r\n    name: 'Wario Land 4',\r\n    platform: Platforms.GBA,\r\n    started: false,\r\n    replay: true\r\n  },\r\n  {\r\n    name: 'God of War',\r\n    platform: Platforms.PS4,\r\n    started: false,\r\n    replay: false\r\n  },\r\n  {\r\n    name: 'Rouge Leader: Rouge Squadron II',\r\n    platform: Platforms.GCN,\r\n    started: false,\r\n    replay: false\r\n  },\r\n  {\r\n    name: 'Metroid Prime',\r\n    platform: Platforms.GCN,\r\n    started: true,\r\n    replay: false\r\n  },\r\n  {\r\n    name: 'Metroid Prime II',\r\n    platform: Platforms.GCN,\r\n    started: false,\r\n    replay: false\r\n  },\r\n  {\r\n    name: 'Metroid Prime III',\r\n    platform: Platforms.GCN,\r\n    started: false,\r\n    replay: false\r\n  },\r\n  {\r\n    name: 'Vagrant Story',\r\n    platform: Platforms.PS1,\r\n    started: false,\r\n    replay: false\r\n  },\r\n  {\r\n    name: 'Yoshis Golden Island',\r\n    platform: Platforms.SNES,\r\n    started: false,\r\n    replay: false\r\n  }\r\n];\r\n","import React, { useEffect, useState } from 'react';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport allGames, { platforms } from './backlog-games';\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    box-sizing: inherit;\n    outline: inherit;\n    margin: 0;\n  }\n  \n  html {\n    box-sizing: border-box;\n    outline: none;\n  }\n\n  body {\n    margin: 0;\n    padding: 0;\n    background-image: url('/backlog/assets/yoshi.gif');\n  }\n\n  a {\n    text-decoration: none;\n  }\n\n  p, a, h1 {\n    font-family: sans-serif;\n    color: white;\n  }\n`;\n\nconst Page = styled.div`\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  position: relative;\n  z-index: 1;\n`;\n\nconst Content = styled.div`\n  width: 100%;\n  height: 100%;\n  max-width: 700px;\n  padding: 10px 10px;\n  background-color: rgba(0, 0, 0, 0.7);\n`;\n\nconst Header = styled.h1`\n  display: inline-block;\n  font-family: serif;\n  transform: scale(calc(7.3 / 3), 1);\n  transform-origin: top left;\n  font-size: 81px;\n  line-height: 67px;\n  margin-bottom: 20px;\n\n  @media only screen and (max-width: 700px) {\n    display: none;\n  }\n`;\n\nconst HeaderMobile = styled(Header)`\n  display: none;\n  @media only screen and (max-width: 700px) {\n    display: inline-block;\n  }\n`;\n\nconst Links = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 20px;\n`;\n\nconst Link = styled.a`\n  &:hover {\n    text-decoration: underline;\n  }\n`;\n\nconst TopText = styled.p`\n  font-size: 16px;\n  line-height: 20px;\n  margin-bottom: 50px;\n`;\n\nconst ListItem = styled.div`\n  display: flex;\n  justify-content: left;\n  margin-bottom: 5px;\n`;\n\nconst PlayGamesSection = styled.div`\n  margin-bottom: 50px;\n`;\n\nconst GameName = styled.p`\n  margin-right: 20px;\n`;\n\nconst GamePlatform = styled.p`\n  opacity: 0.75;\n  margin-right: 10px;\n`;\n\nconst GameReplay = styled.p`\n  opacity: 0.5;\n  margin-right: 10px;\n`;\n\nconst GameStarted = styled.p`\n  opacity: 0.5;\n  margin-right: 10px;\n`;\n\nconst App = () => {\n  const [playGames, setPlayGames] = useState([]);\n\n  useEffect(() => {\n    const idxs = [];\n    let i = 0;\n    while (i < 3) {\n      const idx = Math.floor(Math.random() * allGames.length);\n      if (idxs.indexOf(idx) === -1) {\n        idxs.push(idx);\n        i++;\n      }\n    }\n\n    setPlayGames(idxs.map((i) => allGames[i]));\n  }, []);\n  return (\n    <>\n      <GlobalStyle />\n      <Page>\n        <Content>\n          <Header>Backlog</Header>\n          <HeaderMobile>\n            Back\n            <br />\n            log\n          </HeaderMobile>\n          <Links>\n            <Link href=\"https://rdelos747.github.io/rdls/\">\n              &lt; back to main site\n            </Link>\n          </Links>\n          <TopText>\n            This page keeps track of the games that I plan on playing but\n            haven&#39;t gotten around to yet, as well as those that I have\n            actually started but have dropped and plan to complete. I often\n            spend more time deciding on a new game to play than actually\n            playing, so this page aims to assist by suggesting a few games to\n            consider.\n            <br />\n            <br />\n            Thats all this does for now. I might add more features in the future\n            ¯\\_(ツ)_/¯\n          </TopText>\n          <PlayGamesSection>\n            {playGames.map((game) => (\n              <ListItem key={game.name}>\n                <GameName>{game.name}</GameName>\n                <GamePlatform>[{game.platform}]</GamePlatform>\n                {game.replay && <GameReplay>(replay)</GameReplay>}\n                {game.started && <GameStarted>(started)</GameStarted>}\n              </ListItem>\n            ))}\n          </PlayGamesSection>\n          <>\n            {allGames.map((game) => (\n              <ListItem key={game.name}>\n                <GameName>{game.name}</GameName>\n                <GamePlatform>[{game.platform}]</GamePlatform>\n                {game.replay && <GameReplay>(replay)</GameReplay>}\n                {game.started && <GameStarted>(started)</GameStarted>}\n              </ListItem>\n            ))}\n          </>\n        </Content>\n      </Page>\n    </>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}